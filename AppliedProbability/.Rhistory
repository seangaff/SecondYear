pexp(10, rate=24000)
pexp(10, rate=1/24000)
pexp(10, rate=1/24000)
dexp(10, rate=1/24000)
ks = c(2:5)
percentages <- vector()
percent = function(k){
samples = rexp(10000, 1/24000)
timings = sample(samples, k)
sum = sum(timings)
return(100*(timings[1]/sum) )
}
for(k in ks) {
percents = replicate(200, percent(k))
mean(percents)
percentages = c(percentages, mean(percents))
}
plot(ks, percentages);
numLamps = c(2:5)
percentages <- vector()
percentChance = function(numLamps){
samples = rexp(10000, 1/24000)
timings = sample(samples, k)
sum = sum(timings)
return(100*(timings[1]/sum) )
}
for(k in numLamps) {
percents = replicate(200, percent(k))
mean(percents)
percentages = c(percentages, mean(percents))
}
plot(numLamps, percentages)
rnorm(10,0)
rnorm(10)
u = 0
a = 1
b = 2
values = c(1:iterations)
findP = function(v) {
values -> rnorm(samples,u,v)
count = 0;
for(x in values) {
if(x < b && x > a) {
inc(count) -> 1
}
}
return(count)
}
max = 0
result = 0
for(x in values) {
if(findP(x) > max) {
x = result
}
}
u = 0
a = 1
b = 2
values = c(1:iterations)
findP = function(v) {
values = rnorm(samples,u,v)
count = 0;
for(x in values) {
if(x < b && x > a) {
inc(count) -> 1
}
}
return(count)
}
max = 0
result = 0
for(x in values) {
if(findP(x) > max) {
x = result
}
}
u = 0
a = 1
b = 2
values <- c(1:iterations)
findP = function(v) {
values = rnorm(samples,u,v)
count = 0;
for(x in values) {
if(x < b && x > a) {
inc(count) -> 1
}
}
return(count)
}
max = 0
result = 0
for(x in values) {
if(findP(x) > max) {
x = result
}
}
u = 0
a = 1
b = 2
possible <- c(1:iterations)
findP = function(v) {
values <- rnorm(samples,u,v)
count = 0;
for(x in values) {
if(x < b && x > a) {
inc(count) -> 1
}
}
return(count)
}
max = 0
result = 0
for(x in possible) {
if(findP(x) > max) {
x = result
}
}
possible <- c(1:iterations)
u = 0
a = 1
b = 2
possible <- c(1:200)
findP = function(v) {
values <- rnorm(10000,u,v)
count = 0;
for(x in values) {
if(x < b && x > a) {
inc(count) -> 1
}
}
return(count)
}
max = 0
result = 0
for(x in possible) {
if(findP(x) > max) {
x = result
}
}
u = 0
a = 1
b = 2
possible <- c(1:200)
findP = function(v) {
values <- rnorm(10000,u,v)
count = 0;
for(x in values) {
if(x < b && x > a) {
inc(count) <- 1
}
}
return(count)
}
max = 0
result = 0
for(x in possible) {
if(findP(x) > max) {
x = result
}
}
u = 0
a = 1
b = 2
possible <- c(1:200)
findP = function(v) {
values <- rnorm(10000,u,v)
count = 0;
for(x in values) {
if(x < b && x > a) {
count = count + 1
}
}
return(count)
}
max = 0
result = 0
for(x in possible) {
if(findP(x) > max) {
x = result
}
}
u = 0
a = 1
b = 2
possible <- c(1:200)
findP = function(v) {
values <- rnorm(10000,u,v)
count = 0;
for(x in values) {
if(x < b && x > a) {
count = count + 1
}
}
return(count)
}
max = 0
result = 0
for(x in possible) {
if(findP(x) > max) {
x = result
}
}
u = 0
a = 1
b = 2
possible <- c(1:200)
findP = function(v) {
values <- rnorm(10000,u,v)
count = 0;
for(x in values) {
if(x < b && x > a) {
count = count + 1
}
}
return(count)
}
max = 0
result = 0
for(x in possible) {
if(findP(x) > max) {
x = result
}
}
u = 0
a = 1
b = 2
possible <- c(1:200)
findP = function(v) {
values <- rnorm(10000,u,v)
count = 0;
for(x in values) {
if(x < b && x > a) {
count = count + 1
}
}
return(count)
}
max = 0
result = 0
for(x in possible) {
if(findP(x) > max) {
x = result
}
}
u = 0
a = 1
b = 2
possible <- c(1:200)
findP = function(v) {
values <- rnorm(10000,u,v)
count = 0;
for(x in values) {
if(x < b && x > a) {
count = count + 1
}
}
return(count)
}
max = 0
result = 0
for(x in possible) {
if(findP(x) > max) {
x = result
}
}
u = 0
a = 1
b = 2
possible <- c(1:200)
findP = function(v) {
values <- rnorm(10000,u,v)
count = 0;
for(x in values) {
if(x < b && x > a) {
count = count + 1
}
}
return(count)
}
max = 0
result = 0
for(x in possible) {
if(findP(x) > max) {
x = result
}
}
u = 0
a = 1
b = 2
possible <- c(1:200)
findP = function(v) {
values <- rnorm(10000,u,v)
count = 0;
for(x in values) {
if(x < b && x > a) {
count = count + 1
}
}
return(count)
}
max = 0
result = 0
for(x in possible) {
if(findP(x) > max) {
result = x
}
}
u = 0
a = 1
b = 2
possible <- c(1:200)
findP = function(v) {
values <- rnorm(10000,u,v)
count = 0;
for(x in values) {
if(x < b && x > a) {
count = count + 1
}
}
return(count)
}
max = 0
result = 0
for(x in possible) {
if(findP(x) > max) {
max = findP(x)
result = x
}
}
10^2
